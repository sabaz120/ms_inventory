version: "3"
services:
  #php app
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php  
    container_name: api_restaurant_inventories
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: API_RESTAURANT_INVENTORIES
      SERVICE_TAGS: LOCAL
    working_dir: /var/www
    volumes:
      - ./:/var/www:cached
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - api-restaurant-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    
  #nginx service
  webserver:
    image: nginx:alpine
    container_name: nginx_restaurant_inventories
    restart: unless-stopped
    tty: true
    ports:
      - "8003:80"
    networks: 
      - api-restaurant-network
    volumes:
     - ./:/var/www
     - ./nginx/conf.d/:/etc/nginx/conf.d/  
    depends_on:
      - api
    #MySql Service
  database:
    image: mysql:8.1.0
    container_name: sql_restaurant_inventories
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql  
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks: 
      - api-restaurant-network
#Docker Networks
networks:
  api-restaurant-network:
    driver: bridge      
volumes:
  mysql-data: